{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\naxios.interceptors.response.use(null, error => {\n  const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\n\n  if (!expectedError) {\n    //Add a log service here\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"Authorization\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};","map":{"version":3,"sources":["C:/Users/HP/Downloads/ReactJS-SpringBoot-JWT-Authentican-Authorization-master/ReactJS-SpringBoot-JWT-Authentican-Authorization-master/ReactJS/src/services/httpService.js"],"names":["axios","toast","interceptors","response","use","error","expectedError","status","Promise","reject","setJwt","jwt","defaults","headers","common","get","post","put","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAGAD,KAAK,CAACE,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,IAAhC,EAAuCC,KAAD,IAAW;AAC/C,QAAMC,aAAa,GACjBD,KAAK,CAACF,QAAN,IACAE,KAAK,CAACF,QAAN,CAAeI,MAAf,IAAyB,GADzB,IAEAF,KAAK,CAACF,QAAN,CAAeI,MAAf,GAAwB,GAH1B;;AAKA,MAAI,CAACD,aAAL,EAAoB;AAClB;AACAL,IAAAA,KAAK,CAACI,KAAN,CAAY,gCAAZ;AACD;;AAED,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAZD;;AAcA,SAASK,MAAT,CAAgBC,GAAhB,EAAqB;AACnBX,EAAAA,KAAK,CAACY,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDH,GAAjD;AAED;;AAED,eAAe;AACbI,EAAAA,GAAG,EAAEf,KAAK,CAACe,GADE;AAEbC,EAAAA,IAAI,EAAEhB,KAAK,CAACgB,IAFC;AAGbC,EAAAA,GAAG,EAAEjB,KAAK,CAACiB,GAHE;AAIbC,EAAAA,MAAM,EAAElB,KAAK,CAACkB,MAJD;AAKbR,EAAAA;AALa,CAAf","sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    //Add a log service here\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"Authorization\"] = jwt;\n\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};\n"]},"metadata":{},"sourceType":"module"}