{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamed Nabil\\\\Desktop\\\\ReactJS-SpringBoot-JWT-Authentican-Authorization-master\\\\ReactJS\\\\src\\\\components\\\\profileForm.jsx\";\nimport Joi from \"joi-browser\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { getUserProfile, updateUserProfile } from \"../services/common/profileService\";\nimport Form from \"./common/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdateProfile extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        id: \"\",\n        email: \"\",\n        mobileNo: \"\",\n        address: \"\",\n        gender: \"\",\n        userDto: {}\n      },\n      genderList: [],\n      errors: {}\n    };\n    this.schema = {\n      email: Joi.string().email().required().label(\"Email\"),\n      mobileNo: Joi.number().required().label(\"Mobile No\"),\n      address: Joi.string().required().label(\"Address\"),\n      gender: Joi.string().required().label(\"Gender\"),\n      userDto: Joi.object(),\n      id: Joi.number().required()\n    };\n\n    this.doSubmit = async () => {\n      try {\n        await updateUserProfile(this.state.data);\n        toast.success(\"Profie Updated\");\n        this.props.history.push(\"/userProfile\");\n      } catch (ex) {\n        if (ex.response) {\n          switch (ex.response.status) {\n            case 403:\n              window.location = \"/login\";\n\n            case 400:\n              const errors = { ...this.state.errors\n              };\n              errors.email = ex.response.data;\n              this.setState({\n                errors\n              });\n          }\n        }\n      }\n    };\n  }\n\n  async populateGenderList() {\n    const genderList = [//Modify here , Calling to server will be more beneficial\n    {\n      _id: \"M\",\n      name: \"Male\"\n    }, {\n      _id: \"F\",\n      name: \"Female\"\n    }, {\n      _id: \"O\",\n      name: \"Other\"\n    }];\n    this.setState({\n      genderList\n    });\n  }\n\n  async populateProfile() {\n    try {\n      const {\n        data: resData\n      } = await getUserProfile();\n      this.setState({\n        data: this.viewMapper(resData)\n      });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        this.props.history.replace(\"/userProfile\");\n      }\n    }\n  }\n\n  viewMapper(resData) {\n    return {\n      id: resData.id,\n      email: resData.email,\n      mobileNo: resData.mobileNo,\n      address: resData.address,\n      gender: resData.gender,\n      userDto: resData.userDto\n    };\n  }\n\n  async componentDidMount() {\n    await this.populateGenderList();\n    await this.populateProfile();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.getBorderStyle(),\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: this.renderInput(\"email\", \"Email\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: this.renderInput(\"mobileNo\", \"Mobile No\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: this.renderInput(\"address\", \"Address\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: this.renderSelect(\"gender\", \"Gender\", this.state.genderList)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), this.renderButton(\"Update\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UpdateProfile;","map":{"version":3,"sources":["C:/Users/Mohamed Nabil/Desktop/ReactJS-SpringBoot-JWT-Authentican-Authorization-master/ReactJS/src/components/profileForm.jsx"],"names":["Joi","React","toast","getUserProfile","updateUserProfile","Form","UpdateProfile","state","data","id","email","mobileNo","address","gender","userDto","genderList","errors","schema","string","required","label","number","object","doSubmit","success","props","history","push","ex","response","status","window","location","setState","populateGenderList","_id","name","populateProfile","resData","viewMapper","replace","componentDidMount","render","getBorderStyle","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":"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","sourcesContent":["import Joi from \"joi-browser\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  getUserProfile,\n  updateUserProfile,\n} from \"../services/common/profileService\";\n\nimport Form from \"./common/form\";\n\nclass UpdateProfile extends Form {\n  state = {\n    data: {\n      id: \"\",\n      email: \"\",\n      mobileNo: \"\",\n      address: \"\",\n      gender: \"\",\n      userDto: {},\n    },\n    genderList: [],\n    errors: {},\n  };\n\n  schema = {\n    email: Joi.string().email().required().label(\"Email\"),\n    mobileNo: Joi.number().required().label(\"Mobile No\"),\n    address: Joi.string().required().label(\"Address\"),\n    gender: Joi.string().required().label(\"Gender\"),\n    userDto: Joi.object(),\n    id: Joi.number().required(),\n  };\n\n  async populateGenderList() {\n    const genderList = [\n      //Modify here , Calling to server will be more beneficial\n      { _id: \"M\", name: \"Male\" },\n      { _id: \"F\", name: \"Female\" },\n      { _id: \"O\", name: \"Other\" },\n    ];\n    this.setState({ genderList });\n  }\n\n  async populateProfile() {\n    try {\n      const { data: resData } = await getUserProfile();\n      this.setState({ data: this.viewMapper(resData) });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        this.props.history.replace(\"/userProfile\");\n      }\n    }\n  }\n\n  viewMapper(resData) {\n    return {\n      id: resData.id,\n      email: resData.email,\n      mobileNo: resData.mobileNo,\n      address: resData.address,\n      gender: resData.gender,\n      userDto: resData.userDto,\n    };\n  }\n\n  async componentDidMount() {\n    await this.populateGenderList();\n    await this.populateProfile();\n  }\n\n  doSubmit = async () => {\n    try {\n      await updateUserProfile(this.state.data);\n      toast.success(\"Profie Updated\");\n      this.props.history.push(\"/userProfile\");\n    } catch (ex) {\n      if (ex.response) {\n        switch (ex.response.status) {\n          case 403:\n            window.location = \"/login\";\n          case 400:\n            const errors = { ...this.state.errors };\n            errors.email = ex.response.data;\n            this.setState({ errors });\n        }\n      }\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Update Profile</h1>\n        <div className={this.getBorderStyle()}>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col\">{this.renderInput(\"email\", \"Email\")}</div>\n              <div className=\"col\">\n                {this.renderInput(\"mobileNo\", \"Mobile No\")}\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col\">\n                {this.renderInput(\"address\", \"Address\")}\n              </div>\n\n              <div className=\"col\">\n                {this.renderSelect(\"gender\", \"Gender\", this.state.genderList)}\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col\">\n                <br></br>\n                {this.renderButton(\"Update\")}\n              </div>\n            </div>\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default UpdateProfile;\n"]},"metadata":{},"sourceType":"module"}