{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\ReactJS-SpringBoot-JWT-Authentican-Authorization-master\\\\ReactJS-SpringBoot-JWT-Authentican-Authorization-master\\\\ReactJS\\\\src\\\\components\\\\addUser.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport { toast } from \"react-toastify\";\nimport Form from \"./common/form\";\nimport { getUnits, addUser, getUsers } from \"../services/adminService\";\nimport Table from \"./common/table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddUser extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        userId: \"\",\n        userRole: \"\",\n        fullName: \"\",\n        unitId: \"\"\n      },\n      userRoleList: [],\n      units: [],\n      users: [],\n      errors: {}\n    };\n    this.schema = {\n      userId: Joi.string().required().label(\"Username\"),\n      userRole: Joi.string().required().label(\"User Role\"),\n      fullName: Joi.string().required().label(\"Full Name\"),\n      unitId: Joi.string().required().label(\"Unit\")\n    };\n\n    this.doSubmit = async () => {\n      try {\n        const {\n          data\n        } = this.state;\n        await addUser(data);\n        toast.success(\"User Added\");\n      } catch (ex) {\n        if (ex.response) {\n          switch (ex.response.status) {\n            case 403:\n              window.location = \"/login\";\n\n            case 400:\n              const errors = { ...this.state.errors\n              };\n              errors.userId = ex.response.data;\n              this.setState({\n                errors\n              });\n          }\n        }\n      }\n    };\n  }\n\n  populateRoleList() {\n    const userRoleList = [//Modify here , Calling to server is good\n    {\n      _id: \"ADMIN\",\n      name: \"ROLE_ADMIN\"\n    }, {\n      _id: \"USER\",\n      name: \"ROLE_USER\"\n    }, {\n      _id: \"APPROVER\",\n      name: \"ROLE_APPROVER\"\n    }, {\n      _id: \"CHECKER\",\n      name: \"ROLE_CHECKER\"\n    }];\n    this.setState({\n      userRoleList\n    });\n  }\n\n  async populateUnitList() {\n    const {\n      data: units\n    } = await getUnits();\n    const parsedUnits = [];\n    units.map(value => {\n      parsedUnits.push({\n        _id: value.id,\n        name: value.unitName\n      });\n    });\n    this.setState({\n      units: parsedUnits\n    });\n  }\n\n  async getUsers() {\n    const {\n      data: users\n    } = await getUsers();\n    this.setState({\n      users: users\n    });\n  }\n\n  async componentDidUpdate() {\n    await this.getUsers();\n  }\n\n  async componentDidMount() {\n    await this.getUsers();\n    this.populateRoleList();\n    this.populateUnitList();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.getBorderStyle(),\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: this.renderInput(\"userId\", \"Username\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: this.renderSelect(\"userRole\", \"User Role\", this.state.userRoleList)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: this.renderInput(\"fullName\", \"Full Name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: this.renderSelect(\"unitId\", \"Unit\", this.state.units)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), this.renderButton(\"Add\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: [{\n          Header: \"Full Name\",\n          accessor: \"fullName\"\n        }, {\n          Header: \"User Id\",\n          accessor: \"userId\"\n        }, {\n          Header: \"User Role\",\n          accessor: \"userRole\"\n        }, {\n          Header: \"Active\",\n          accessor: \"active\"\n        }],\n        data: this.state.users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AddUser;","map":{"version":3,"sources":["C:/Users/HP/Downloads/ReactJS-SpringBoot-JWT-Authentican-Authorization-master/ReactJS-SpringBoot-JWT-Authentican-Authorization-master/ReactJS/src/components/addUser.jsx"],"names":["React","Joi","toast","Form","getUnits","addUser","getUsers","Table","AddUser","state","data","userId","userRole","fullName","unitId","userRoleList","units","users","errors","schema","string","required","label","doSubmit","success","ex","response","status","window","location","setState","populateRoleList","_id","name","populateUnitList","parsedUnits","map","value","push","id","unitName","componentDidUpdate","componentDidMount","render","getBorderStyle","handleSubmit","renderInput","renderSelect","renderButton","Header","accessor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport { toast } from \"react-toastify\";\nimport Form from \"./common/form\";\nimport { getUnits, addUser, getUsers } from \"../services/adminService\";\nimport Table from \"./common/table\";\n\nclass AddUser extends Form {\n  state = {\n    data: { userId: \"\", userRole: \"\", fullName: \"\", unitId: \"\" },\n    userRoleList: [],\n    units: [],\n    users: [],\n    errors: {},\n  };\n\n  schema = {\n    userId: Joi.string().required().label(\"Username\"),\n    userRole: Joi.string().required().label(\"User Role\"),\n    fullName: Joi.string().required().label(\"Full Name\"),\n    unitId: Joi.string().required().label(\"Unit\"),\n  };\n\n  populateRoleList() {\n    const userRoleList = [\n      //Modify here , Calling to server is good\n      { _id: \"ADMIN\", name: \"ROLE_ADMIN\" },\n      { _id: \"USER\", name: \"ROLE_USER\" },\n      { _id: \"APPROVER\", name: \"ROLE_APPROVER\" },\n      { _id: \"CHECKER\", name: \"ROLE_CHECKER\" },\n    ];\n    this.setState({ userRoleList });\n  }\n\n  async populateUnitList() {\n    const { data: units } = await getUnits();\n    const parsedUnits = [];\n    units.map((value) => {\n      parsedUnits.push({ _id: value.id, name: value.unitName });\n    });\n    this.setState({ units: parsedUnits });\n  }\n\n  async getUsers() {\n    const { data: users } = await getUsers();\n    this.setState({ users: users });\n  }\n\n  async componentDidUpdate(){\n    await this.getUsers();\n  }\n\n  async componentDidMount() {\n    await this.getUsers();\n    this.populateRoleList();\n    this.populateUnitList();\n  }\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await addUser(data);\n      toast.success(\"User Added\");\n    } catch (ex) {\n      if (ex.response) {\n        switch (ex.response.status) {\n          case 403:\n            window.location = \"/login\";\n          case 400:\n            const errors = { ...this.state.errors };\n            errors.userId = ex.response.data;\n            this.setState({ errors });\n        }\n      }\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Add User</h1>\n        <div className={this.getBorderStyle()}>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col\">\n                {this.renderInput(\"userId\", \"Username\")}\n              </div>\n              <div className=\"col\">\n                {this.renderSelect(\n                  \"userRole\",\n                  \"User Role\",\n                  this.state.userRoleList\n                )}\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col\">\n                {this.renderInput(\"fullName\", \"Full Name\")}\n              </div>\n\n              <div className=\"col\">\n                {this.renderSelect(\"unitId\", \"Unit\", this.state.units)}\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col\">\n                <br></br>\n                {this.renderButton(\"Add\")}\n              </div>\n            </div>\n          </form>\n        </div>\n        <Table\n          columns={[\n            { Header: \"Full Name\", accessor: \"fullName\" },\n            { Header: \"User Id\", accessor: \"userId\" },\n            { Header: \"User Role\", accessor: \"userRole\" },\n            { Header: \"Active\", accessor: \"active\" },\n          ]}\n          data={this.state.users}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}